<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container {
            margin-top: 20px;
        }
        .filter {
            margin-bottom: 20px;
        }
        .filter label {
            margin-right: 10px;
        }
        .summary div {
            margin-bottom: 10px;
        }
        table {
            width: 100%;
            margin-bottom: 20px;
        }
        table th, table td {
            text-align: center;
            vertical-align: middle;
        }
        .btn-primary, .btn-danger, .btn-warning {
            margin: 5px;
        }
        .summary {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <main id="main" class="main">
        <div class="container">
            <h1 class="text-center mb-4">Sales Report</h1>
            <div class="filter mb-3">
                <label for="date-range" class="form-label">Custom Date Range:</label>
                <input type="date" id="start-date" class="form-control d-inline-block" style="width: auto; display: inline;">
                <span class="mx-2">to</span>
                <input type="date" id="end-date" class="form-control d-inline-block" style="width: auto; display: inline;">
                <button onclick="filterReport()" class="btn btn-primary">Filter</button>
                <button onclick="clearFilters()" class="btn btn-secondary">Clear Filters</button>
            </div>
            <div class="filter mb-3">
                <label for="preset-range" class="form-label">Preset Date Range:</label>
                <select id="preset-range" class="form-select d-inline-block" style="width: auto; display: inline;" onchange="presetFilter()">
                    <option value="">Select Preset</option>
                    <option value="1-day">1 Day</option>
                    <option value="1-week">1 Week</option>
                    <option value="1-month">1 Month</option>
                </select>
            </div>
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Order ID</th>
                        <th>Date</th>
                        <th>Customer Name</th>
                        <th>Order Amount</th>
                        <th>Discount</th>
                        <th>Coupon Deduction</th>
                        <th>Final Amount</th>
                    </tr>
                </thead>
                <tbody id="orders-table-body">
                    {{#each orders}}
                    <tr>
                        <td>{{orderId}}</td>
                        <td>{{formatDate createdAt}}</td>
                        <td>{{userId.name}}</td>
                        <td>{{summary.totalAmountToBePaid}} ₹</td>
                        <td>{{summary.totalDiscount}} ₹</td>
                        <td>{{#if coupon.discountAmount}}{{coupon.discountAmount}}{{else}}0.00{{/if}} ₹</td>
                        <td>{{summary.discountedPrice}} ₹</td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
            <div class="summary">
                <h5>Overall Summary</h5>
                <div>Overall Sales Count: {{totalSalesCount}}</div>
                <div>Overall Order Amount: {{totalOrderAmount}} ₹</div>
                <div>Overall Discount: {{totalDiscount}} ₹</div>
                <div>Overall Coupon Discount: {{totalCouponDiscount}} ₹</div>
                <div>Overall GST Amount: {{totalGst}} ₹</div>
                <div>Overall Revenue: {{round totalRevenue}} ₹</div>
            </div>
            <div class="text-center mt-4">
                <button onclick="downloadPDF()" class="btn btn-danger">Download PDF</button>
                <button onclick="downloadExcel()" class="btn btn-warning">Download as Excel</button>
            </div>
        </div>
    </main>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    {{!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script> --}}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.18/jspdf.plugin.autotable.min.js"></script>
    <script>
        function getQueryParams() {
            const params = new URLSearchParams(window.location.search);
            return {
                startDate: params.get('startDate') || '',
                endDate: params.get('endDate') || '',
                presetRange: params.get('presetRange') || ''
            };
        }

        function setFilterValues() {
            const { startDate, endDate, presetRange } = getQueryParams();

            if (startDate) {
                document.getElementById('start-date').value = startDate;
            }
            if (endDate) {
                document.getElementById('end-date').value = endDate;
            }
            if (presetRange) {
                document.getElementById('preset-range').value = presetRange;
            }
        }

        window.onload = setFilterValues;

        function clearFilters() {
            document.getElementById('start-date').value = '';
            document.getElementById('end-date').value = '';
            document.getElementById('preset-range').value = '';
            window.location.href = '/admin/salesReport';
        }

        function filterReport() {
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;
            const queryParams = startDate && endDate ? `?startDate=${startDate}&endDate=${endDate}` : '';
            window.location.href = `/admin/salesReport${queryParams}`;
        }

        function presetFilter() {
            const presetRange = document.getElementById('preset-range').value;
            if (presetRange) {
                window.location.href = `/admin/salesReport?presetRange=${presetRange}`;
            }
        }

        function downloadPDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            doc.setFontSize(18);
            doc.text('Sales Report', 14, 22);

            const headers = ['Order ID', 'Date', 'Customer Name', 'Order Amount', 'Discount', 'Coupon Deduction', 'Final Amount'];
            const data = [];

            const rows = document.querySelectorAll('#orders-table-body tr');
            let totalSalesCount = 0;
            let totalOrderAmount = 0;
            let totalDiscount = 0;
            let totalCouponDiscount = 0;
            let totalFinalAmount = 0;

            rows.forEach(row => {
                const cells = row.querySelectorAll('td');
                const orderAmount = parseFloat(cells[3].textContent.replace(' ₹', ''));
                const discount = parseFloat(cells[4].textContent.replace(' ₹', ''));
                const couponDeduction = parseFloat(cells[5].textContent.replace(' ₹', ''));
                const finalAmount = parseFloat(cells[6].textContent.replace(' ₹', ''));

                data.push([
                    cells[0].textContent,
                    cells[1].textContent,
                    cells[2].textContent,
                    cells[3].textContent,
                    cells[4].textContent,
                    cells[5].textContent,
                    cells[6].textContent
                ]);

                totalSalesCount++;
                totalOrderAmount += orderAmount;
                totalDiscount += discount;
                totalCouponDiscount += couponDeduction;
                totalFinalAmount += finalAmount;
            });

            doc.autoTable({
                head: [headers],
                body: data,
                startY: 30,
                styles: { fontSize: 10 },
                columnStyles: { 0: { cellWidth: 30 }, 1: { cellWidth: 30 }, 2: { cellWidth: 50 }, 3: { cellWidth: 30 }, 4: { cellWidth: 30 }, 5: { cellWidth: 40 }, 6: { cellWidth: 30 } }
            });

            let startY = doc.autoTable.previous.finalY + 10;
            doc.text('Summary:', 14, startY);
            doc.text(`Total Sales Count: ${totalSalesCount}`, 14, startY + 10);
            doc.text(`Overall Order Amount: ${totalOrderAmount.toFixed(2)} ₹`, 14, startY + 20);
            doc.text(`Overall Discount: ${totalDiscount.toFixed(2)} ₹`, 14, startY + 30);
            doc.text(`Overall Coupon Discount: ${totalCouponDiscount.toFixed(2)} ₹`, 14, startY + 40);
            doc.text(`Overall Final Amount: ${totalFinalAmount.toFixed(2)} ₹`, 14, startY + 50);

            doc.save('SalesReport.pdf');
        }

      /*  function downloadExcel() {
            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.table_to_sheet(document.querySelector('table'));
            XLSX.utils.book_append_sheet(wb, ws, 'Sales Report');
            XLSX.writeFile(wb, 'SalesReport.xlsx');
        }*/
    </script>
</body>
</html>
