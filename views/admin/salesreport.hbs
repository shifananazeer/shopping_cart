<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container {
            margin-top: 20px;
        }
        .filter {
            margin-bottom: 20px;
        }
        .filter label {
            margin-right: 10px;
        }
        .summary div {
            margin-bottom: 10px;
        }
        table {
            width: 100%;
            margin-bottom: 20px;
        }
        table th, table td {
            text-align: center;
            vertical-align: middle;
        }
        .btn-primary, .btn-danger, .btn-warning {
            margin: 5px;
        }
        .summary {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <main id="main" class="main">
        <div class="container">
            <h1 class="text-center mb-4">Sales Report</h1>
            <div class="filter mb-3">
                <label for="date-range" class="form-label">Custom Date Range:</label>
                <input type="date" id="start-date" class="form-control d-inline-block" style="width: auto; display: inline;">
                <span class="mx-2">to</span>
                <input type="date" id="end-date" class="form-control d-inline-block" style="width: auto; display: inline;">
                <button onclick="filterReport()" class="btn btn-primary">Filter</button>
            </div>
            <div class="filter mb-3">
                <label for="preset-range" class="form-label">Preset Date Range:</label>
                <select id="preset-range" class="form-select d-inline-block" style="width: auto; display: inline;" onchange="presetFilter()">
                    <option value="">Select Preset</option>
                    <option value="1-day">1 Day</option>
                    <option value="1-week">1 Week</option>
                    <option value="1-month">1 Month</option>
                </select>
            </div>
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Order ID</th>
                        <th>Date</th>
                        <th>Customer Name</th>
                        <th>Order Amount</th>
                        <th>Discount</th>
                        <th>Coupon Deduction</th>
                        <th>GST Amount</th>
                        <th>Final Amount</th>
                        <th>Payment Status</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each orders}}
                    <tr>
                        <td>{{orderId}}</td>
                        <td>{{formatDate createdAt}}</td>
                        <td>{{userId.name}}</td>
                        <td>{{summary.totalAmountToBePaid}} ₹</td>
                        <td>{{summary.totalDiscount}} ₹</td>
                        <td>{{#if coupon.discountAmount}}{{coupon.discountAmount}}{{else}}0.00{{/if}} ₹</td>
                        <td>{{totalGst}} ₹</td>
                        <td>{{summary.discountedPrice}} ₹</td>
                        <td>{{paymentStatus}}</td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
            <div class="summary">
                <h5>Overall Summary</h5>
                <div>Overall Sales Count: {{totalSalesCount}}</div>
                <div>Overall Order Amount: {{totalOrderAmount}} ₹</div>
                <div>Overall Discount: {{totalDiscount}} ₹</div>
                <div>Overall Coupon Discount: {{totalCouponDiscount}} ₹</div>
                <div>Overall GST Amount: {{totalGst}} ₹</div>
                <div>Overall Revenue: {{totalRevenue}} ₹</div>
            </div>
            <div class="text-center mt-4">
                <button onclick="downloadPDF()" class="btn btn-danger">Download PDF</button>
                <button onclick="downloadAsExcel()" class="btn btn-warning">Download as Excel</button>
            </div>
        </div>
    </main>

   <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.21/jspdf.plugin.autotable.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.6/xlsx.full.min.js"></script>
    <script>
        function filterReport() {
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;
            const queryParams = startDate && endDate ? `?startDate=${startDate}&endDate=${endDate}` : '';
            window.location.href = `/admin/salesReport${queryParams}`;
        }

        function presetFilter() {
            const presetRange = document.getElementById('preset-range').value;
            if (presetRange) {
                window.location.href = `/admin/salesReport?presetRange=${presetRange}`;
            }
        }

        function downloadPDF() {
            const { jsPDF } = window.jspdf;
    const doc = new jsPDF();
    
    // Title
    doc.setFontSize(18);
    doc.text('Sales Report', 14, 22);
    
    // Table Headers
    const headers = ["Order ID", "Date", "Customer Name", "Order Amount", "Discount", "Coupon Deduction", "GST Amount", "Final Amount", "Payment Status"];
    const data = [];
    
    {{#each orders}}
    data.push([
        "{{orderId}}",
        "{{formatDate createdAt}}",
        "{{userId.name}}",
        "{{summary.totalAmountToBePaid}} ₹",
        "{{summary.totalDiscount}} ₹",
        "{{#if coupon.discountAmount}}{{coupon.discountAmount}}{{else}}0.00{{/if}} ₹",
        "{{totalGst}} ₹",
        "{{summary.discountedPrice}} ₹",
        "{{paymentStatus}}"
    ]);
    {{/each}}

    doc.autoTable({
        head: [headers],
        body: data,
        startY: 30,
        styles: { fontSize: 10 },
        columnStyles: { 0: { cellWidth: 30 }, 1: { cellWidth: 30 }, 2: { cellWidth: 50 }, /* Adjust other columns as needed */ }
    });

    // Summary
    let startY = doc.autoTable.previous.finalY + 10;
    doc.setFontSize(12);
    doc.text(`Overall Sales Count: {{totalSalesCount}}`, 14, startY);
    doc.text(`Overall Order Amount: {{totalOrderAmount}} ₹`, 14, startY + 10);
    doc.text(`Overall Discount: {{totalDiscount}} ₹`, 14, startY + 20);
    doc.text(`Overall Coupon Discount: {{totalCouponDiscount}} ₹`, 14, startY + 30);
    doc.text(`Overall GST Amount: {{totalGst}} ₹`, 14, startY + 40);
    doc.text(`Overall Revenue: {{totalRevenue}} ₹`, 14, startY + 50);

    // Save PDF
    doc.save('sales_report.pdf');
}
        

        function downloadAsExcel() {
            const worksheet = XLSX.utils.json_to_sheet([
        {
            "Order ID": "Order ID",
            "Date": "Date",
            "Customer Name": "Customer Name",
            "Order Amount": "Order Amount",
            "Discount": "Discount",
            "Coupon Deduction": "Coupon Deduction",
            "GST Amount": "GST Amount",
            "Final Amount": "Final Amount",
            "Payment Status": "Payment Status"
        },
        {{#each orders}}
        {
            "Order ID": "{{orderId}}",
            "Date": "{{formatDate createdAt}}",
            "Customer Name": "{{userId.name}}",
            "Order Amount": "{{summary.totalAmountToBePaid}} ₹",
            "Discount": "{{summary.totalDiscount}} ₹",
            "Coupon Deduction": "{{#if coupon.discountAmount}}{{coupon.discountAmount}}{{else}}0.00{{/if}} ₹",
            "GST Amount": "{{totalGst}} ₹",
            "Final Amount": "{{summary.discountedPrice}} ₹",
            "Payment Status": "{{paymentStatus}}"
        },
        {{/each}}
    ]);
    
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sales Report');

    // Summary Data
    const summaryData = [
        ["Overall Sales Count", "{{totalSalesCount}}"],
        ["Overall Order Amount", "{{totalOrderAmount}} ₹"],
        ["Overall Discount", "{{totalDiscount}} ₹"],
        ["Overall Coupon Discount", "{{totalCouponDiscount}} ₹"],
        ["Overall GST Amount", "{{totalGst}} ₹"],
        ["Overall Revenue", "{{totalRevenue}} ₹"]
    ];
    
    const summaryWorksheet = XLSX.utils.aoa_to_sheet(summaryData);
    XLSX.utils.book_append_sheet(workbook, summaryWorksheet, 'Summary');

    // Save Excel
    XLSX.writeFile(workbook, 'sales_report.xlsx');
}
        
    </script>
</body>
</html>
