<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Details</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .main-img img {
            width: 100%;
            height: auto;
            transition: transform 0.3s;
        }
        .main-img:hover img {
            transform: scale(1.20);
        }
        .thumbnail-image {
            cursor: pointer;
        }
        .rate {
            display: flex;
            cursor: pointer;
        }
        .rate .fa-star {
            font-size: 2em;
            color: grey;
        }
        .rate .fa-star.on {
            color: gold;
        }
        .comment-section {
            margin-top: 10px;
            width: 100%;
        }
        .comment-section textarea {
            width: 100%;
            height: 80px;
            padding: 10px;
            margin-bottom: 10px;
            resize: none;
        }
        .comment-section button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        .comment-section button:hover {
            background-color: #0056b3;
        }
        .product-price {
            font-size: 1.5rem;
            color: #000;
        }
        .product-original-price {
            font-size: 1rem;
            color: #888;
        }
        .product-discount {
            font-size: 1rem;
            color: green;
        }
        .product-discounted-price {
            font-size: 2rem;
            color: red;
        }
        .details{
            padding: 100px;

        }
        .breadcrumb {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 5px;
    background: none;
}

.breadcrumb-item {
    margin-right: 5px;
}

.breadcrumb-item a {
    text-decoration: none;
    color: #007bff;
}

.breadcrumb-item.active {
    color: #6c757d;
}

.breadcrumb-item::after {
    content: '>';
    margin-left: 5px;
    color: #6c757d;
}

.breadcrumb-item:last-child::after {
    content: '';
}


    .stars i {
        color: goldenrod; 
    }


    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

<div class="container mt-5">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/products"> All products</a></li>
            <li class="breadcrumb-item active" aria-current="page">{{product.name}}</li>
        </ol>
    </nav>
    <div class="row mt-4">
        <!-- Left Side: Images -->
        <div class="col-md-6">
            <div class="main-img mb-3">
                <img class="img-fluid" src="{{product.images.[0]}}" alt="{{product.name}}">
            </div>
            <div class="row my-3 previews">
                {{#each product.images}}
                    <div class="col-3">
                        <img class="img-thumbnail thumbnail-image" src="{{this}}" alt="Thumbnail" data-src="{{this}}">
                    </div>
                {{/each}}
            </div>
        </div>

        <!-- Right Side: Product Details -->
    <div class="col-md-6 mt-5 details">
    <h2 class="mb-0"><b>{{product.name}}</b></h2>
    <div class="product-prices mt-3">
        {{#if product.discount}}
            <span class="product-original-price">
                <del>Rs {{product.price}}</del>
            </span>
            <span class="product-discount">( {{product.discount}}% Off )</span>
            <h2><span class="product-discounted-price">
                Rs {{calcDiscountedPrice product.price product.discount}}
            </span></h2>
        {{else}}
            <span class="product-price">Rs {{product.price}}</span>
        {{/if}}
    </div>
     <div class="stock-info mt-3">
        {{#if (gt product.stock 0)}}
      <p>Stock Left: {{product.stock}}</p>
{{else}}
    <p class="text-danger">Out of Stock</p>
{{/if}}
    </div>
    <p class="mt-4" style="color: black;"><b></b> {{product.description}}</p>

    <!-- Display Average Rating as Stars -->
    <div class="mt-3">
        <b>Average Rating:</b>
        <div class="stars">
            {{{generateStars product.avgRating}}}
        </div>
    </div>

    <div class="product-bottom d-flex flex-wrap align-items-center w-100 mt-3">
        
         {{#if isInCart}}
    <a href="/cart" class="btn btn-secondary mt-2">Go to Cart</a>
{{else}}
    <button class="btn btn-primary mt-2" data-product-id="{{product._id}}" onclick="addToCart(this)">Add To Cart</button>
{{/if}}
    </div>
</div>


    <!-- Review Section -->
    <section style="margin-top:70px;margin-bottom:40px;">
        <div class="w-100 position-relative bg-color5 pt-70 pb-120">
            <div class="container">
                <div class="product-tabs position-relative w-100">
                    <h1 style="text-decoration: underline;">Reviews</h1>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">

                
      <!-- Check purchase status -->
                        <div id="review-section" style="display: none;">
                            <h5 style="margin-top: 1%;">Give Your Rating</h5>
                            <div class="product-rate-review d-flex flex-wrap align-items-center">
                                <div class="rate" id="rating">
                                    <i class="fas fa-star" data-value="1"></i>
                                    <i class="fas fa-star" data-value="2"></i>
                                    <i class="fas fa-star" data-value="3"></i>
                                    <i class="fas fa-star" data-value="4"></i>
                                    <i class="fas fa-star" data-value="5"></i>
                                </div>
                                <div class="comment-section" style="display: flex; flex-direction: column;">
                                    <textarea id="comment" style="background-color: burlywood;" placeholder="Write your comment here..."></textarea>
                                    <button id="submit-review">Submit</button>
                                </div>
                            </div>
                        </div>


                            <h5 style="margin-top: 1%; text-decoration: underline;">Other's Rating</h5>
                            <div id="reviews-container">
                                <!-- Reviews will be appended here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<section>
    <div class="container mt-5">
    <!-- Existing product details -->

    <div class="row mt-5">
        <div class="col-12">
            <h2 class="mb-5" style="font-weight: bolder;">Related Products</h2>
            <div class="row">
                {{#each relatedProducts}}
                    <div class="col-md-3 mb-4">
                        <div class="card">
                            <img class="card-img-top" src="{{this.images.[0]}}" alt="{{this.name}}">
                            <div class="card-body">
                                <h5 class="card-title">{{this.name}}</h5>
                                <p class="card-text" style="color: green;">Rs {{this.discount}}%Off</p>
                                {{#if this.discount}}
                                    <p class="card-text">
                                        <del style="color: red;">Rs {{this.price}}</del> 
                                        Rs {{calcDiscountedPrice this.price this.discount}}
                                    </p>
                                {{/if}}
                                 <button class="btn btn-primary mt-2" data-product-id="{{product._id}}" onclick="addToCart(this)">Add To Cart</button>
                                    
                            </div>
                             
                        </div>
                    </div>
                {{/each}}
            </div>
        </div>
    </div>
   
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
      
   
$(document).ready(function() {

    var productId = "{{product._id}}";
        $.ajax({
            url: "/verify-purchase/" + productId,
            method: "GET",
            success: function(response) {
                console.log(response); // Debugging: Log the response
                if (response.success) {
                    $("#review-section").show();
                } else {
                    $("#review-section").hide();
                }
            },
            error: function(error) {
                console.log("Error:", error); // Debugging: Log any error
            }
        });



    // Thumbnail click to change main image
    $('.thumbnail-image').on('click', function() {
        var newImageSrc = $(this).data('src');
        $('.main-img img').attr('src', newImageSrc);
    });



   // Check if the user has purchased the product
  
    // Star rating system
    const stars = document.querySelectorAll('.rate .fa-star');
    const submitButton = document.getElementById('submit-review');
    let selectedRating = 0;

    stars.forEach(star => {
        star.addEventListener('click', setRating);
        star.addEventListener('mouseover', addHover);
        star.addEventListener('mouseout', removeHover);
    });

    submitButton.addEventListener('click', submitReview);

    function setRating(event) {
        const value = event.target.getAttribute('data-value');
        selectedRating = value;
        stars.forEach(star => {
            if (star.getAttribute('data-value') <= value) {
                star.classList.add('on');
            } else {
                star.classList.remove('on');
            }
        });
    }

    function addHover(event) {
        const value = event.target.getAttribute('data-value');
        stars.forEach(star => {
            if (star.getAttribute('data-value') <= value) {
                star.classList.add('on');
            } else {
                star.classList.remove('on');
            }
        });
    }

    function removeHover(event) {
        stars.forEach(star => {
            star.classList.remove('on');
        });
        stars.forEach(star => {
            if (star.getAttribute('data-value') <= selectedRating) {
                star.classList.add('on');
            }
        });
    }

  function submitReview() {
    const comment = document.getElementById('comment').value;
    if (selectedRating > 0 && comment) {
        fetch('/rate', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                rating: selectedRating,
                comment: comment,
                productId: '{{product._id}}'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Thank you!',
                    text: 'Thank you for your review!',
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.reload();
                    }
                });
            } else if (data.notLoggedIn) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Not Logged In',
                    text: 'You need to be logged in to submit a review.',
                });
            } else if (data.alreadyExist) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Already Rated',
                    text: 'You have already rated this product.',
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong. Please try again.',
                });
            }
        })
        .catch((error) => {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while submitting your review. Please try again.',
            });
        });
    } else {
        Swal.fire({
            icon: 'warning',
            title: 'Incomplete',
            text: 'Please select a rating and write a comment.',
        });
    }
}

    // Fetch reviews on page load
    fetchReviews();

    function fetchReviews() {
        fetch(`/reviews?productId={{product._id}}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const reviewsContainer = document.getElementById('reviews-container');
                    reviewsContainer.innerHTML = ''; // Clear the container
                    data.reviews.forEach(review => {
                        const reviewElement = document.createElement('div');
                        reviewElement.className = 'review';
                        reviewElement.innerHTML = `
                            <div class="stars">${generateStars(review.rating)}</div>
                            <p>${review.comment}</p>
                            <small>Reviewed by: ${review.userId.name} </small>
                        `;
                        reviewsContainer.appendChild(reviewElement);
                    });
                } else {
                    console.error('Error fetching reviews:', data.message);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function generateStars(rating) {
        let starsHtml = '';
        for (let i = 1; i <= 5; i++) {
            if (i <= rating) {
                starsHtml += '<i class="fas fa-star"></i>';
            } else {
                starsHtml += '<i class="far fa-star"></i>';
            }
        }
        return starsHtml;
    }
});


  async function addToCart(button) {
            const productId = button.getAttribute('data-product-id');

            try {
                const response = await fetch(`/add-to-cart?productId=${productId}`, {
                    method: 'GET'
                });
                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        text: 'Product successfully added to cart',
                        icon: 'success',
                        showConfirmButton: false,
                        timer: 2000,
                        customClass: {
                            title: 'text-success',
                            popup: 'swal2-popup-custom'
                        }
                    });
                } else if (data.message === 'User not logged in') {
                    Swal.fire({
                        text: 'You must be logged in to add products to the cart',
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    });
                } else {
                    Swal.fire({
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
            }
        }


</script>
</body>
</html>
