<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        #paymentMethod {
            width: 300px;
        }
        label {
            font-size: large;
        }
        option, select {
            font-size: large;
        }
        .form-select {
            font-size: 2rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Checkout</h2>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Product Name</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Price (per item)</th>
                    <th scope="col">Discount %</th>
                </tr>
            </thead>
            <tbody>
                {{#each cartItems}}
                <tr>
                    <td>{{this.name}}</td>
                    <td>{{this.quantity}}</td>
                    <td>{{this.price}} ₹</td>
                    <td>{{this.discount}} %</td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        <div class="summary">
            <h4>Order Summary</h4>
            <p>Total Price Before Discount: {{summary.totalPriceBeforeDiscount}} ₹</p>
            <p>Total Discount: {{summary.totalDiscount}} ₹</p>
            <p>Discounted Price: {{summary.discountedPrice}} ₹</p>
            <p>Shipping Charge: {{summary.shippingCharge}} ₹</p>
            <p>Total Payable Amount: {{summary.totalAmountToBePaid}} ₹</p>
        </div>

        <div class="address-selection">
            <h4>Delivery Address</h4>
            {{#each addresses}}
            <div class="form-check">
                <input class="form-check-input" type="radio" name="address" id="address{{@index}}" value="{{this._id}}" onchange="updateSelectedAddress('{{this._id}}')">
                <label class="form-check-label" for="address{{@index}}">
                    {{this.houseName}}, {{this.street}}, {{this.district}}, {{this.state}}, {{this.pincode}}
                </label>
            </div>
            {{/each}}
            <br><br>
            <a id="editAddressLink" href="#">Edit Address</a>
            <input type="hidden" id="selectedAddressId" name="selectedAddressId" value="">
        </div>

        <div class="mb-3">
            <label for="paymentMethod" class="form-label">Select Payment Method</label>
            <select class="form-select" id="paymentMethod" name="paymentMethod" required>
                <option value="">Select Payment Method</option>
                <option value="online_payment">Online Payment</option>
                <option value="cash_on_delivery">Cash On Delivery</option>
            </select>
        </div>

        <button id="placeOrderButton" class="btn btn-primary">Place Order</button>
    </div>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      function updateSelectedAddress(addressId) {
    $('#selectedAddressId').val(addressId);
}

$(document).ready(function() {
    // Fetch cart items and summary dynamically
    $.ajax({
        url: '/get-cart-items',
        type: 'GET',
        success: function(response) {
            if (response.success) {
                const items = JSON.stringify(response.items);
                const summary = JSON.stringify(response.summary);

                $('#placeOrderButton').click(function() {
                    const selectedAddressId = $('#selectedAddressId').val();
                    const paymentMethod = $('#paymentMethod').val();
                    let paymentStatus = 'pending'; // Default to pending for cash on delivery

                    // Address validation
                    if (!selectedAddressId) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Missing Address',
                            text: 'Please select an address.'
                        });
                        return;
                    }

                    // Payment method validation
                    if (!paymentMethod) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Missing Payment Method',
                            text: 'Please select a payment method.'
                        });
                        return;
                    }

                    // Place order
                    $.ajax({
                        url: '/place-order',
                        type: 'POST',
                        data: {
                            selectedAddressId: selectedAddressId,
                            items: items,
                            summary: summary,
                            paymentMethod: paymentMethod,
                            paymentStatus: paymentStatus
                        },
                        success: function(response) {
                            if (response.success && paymentMethod === 'online_payment') {
                                const options = {
                                    key: response.razorpayKey,
                                    amount: response.order.totalamount,
                                    currency: "INR",
                                    name: "Your Company Name",
                                    description: "Test Transaction",
                                    order_id: response.order.id,
                                    handler: function(paymentResponse) {
                                        $.ajax({
                                            url: '/save-payment-details',
                                            type: 'POST',
                                            data: {
                                                paymentId: paymentResponse.razorpay_payment_id,
                                                orderId: response.order.id,
                                                signature: paymentResponse.razorpay_signature,
                                                paymentStatus: 'success'
                                            },
                                            success: function(paymentResponse) {
                                                Swal.fire({
                                                    icon: 'success',
                                                    title: 'Payment Successful',
                                                    text: 'Your order has been placed successfully!'
                                                }).then(() => {
                                                    window.location.href = '/order-confirmation';
                                                });
                                            },
                                            error: function(error) {
                                                Swal.fire({
                                                    icon: 'error',
                                                    title: 'Payment Failed',
                                                    text: 'There was an error processing your payment. Please try again.'
                                                });
                                                // Update payment status to failed
                                                $.ajax({
                                                    url: '/update-payment-status',
                                                    type: 'POST',
                                                    data: {
                                                        orderId: response.order.id,
                                                        paymentStatus: 'failed'
                                                    }
                                                });
                                            }
                                        });
                                    },
                                    prefill: {
                                        name: "Your Name",
                                        email: "your-email@example.com",
                                        contact: "9400311312"
                                    },
                                    notes: {
                                        address: "Razorpay Corporate Office"
                                    },
                                    theme: {
                                        color: "#3399cc"
                                    }
                                };
                                const rzp1 = new Razorpay(options);
                                rzp1.open();
                            } else {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Order Placed',
                                    text: 'Your order has been placed successfully!'
                                }).then(() => {
                                    window.location.href = '/order-confirmation';
                                });
                            }
                        },
                        error: function(error) {
                            console.error('Error placing order:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Order Failed',
                                text: 'There was an error placing your order. Please try again.'
                            });
                        }
                    });
                });
            }
        },
        error: function(error) {
            console.error('Error retrieving cart items:', error);
            Swal.fire({
                icon: 'error',
                title: 'Cart Retrieval Failed',
                text: 'Could not retrieve your cart items. Please try again.'
            });
        }
    });
});
    </script>
</body>
</html>
